Strings are simply created by enclosing characters in quotes.
Creating is as simple as assigning a value to a variable. For example;
var = "Learn Python with Chris."

To access substrings, use the square brackets for slicing along with the index or indices to obtain the substring.

Updating Strings
one can update an existing string by (re)assigning a variable to another string.

String Formatting Operators and their conversions
%c - character
%s - string conversion via str() prior to formatting
%i - signed decimal integer
%d - signed decimal integer
%u - unsigned decimal integer
%o - octal integer
%x - hexadecimal integer (lowercase letters)
%X - hexadecimal integer (UPPERcase letters)
%e - exponential notation (with lowercase 'e')
%E - exponential notation (with UPPERcase 'E')
%f - floating point real number
%g - the shorter of %f and %e
%G - the shorter of %f and %E

Other symbols and functionality
* - argument specifies width or precision
- - left justification
+ - display the sign
<sp> - leave a blank space before a positive number
# - add the octal leading zero ('0') or hexadecimal leading '0x' or '0X', depending on whether 'x' or X were used.
0 - pad from left with zeros (instead of spaces)
% - '%%' leaves you with a single literal '%'
(var) - mapping variable (dictionary arguments)
m.n. - m is the minimum total width and n is the number of digits to display after the decimal point (if appl.)

Triple Quotes
Python's triple quotes comes to the rescue by allowing strings to span multiple lines including verbatim NEWLINES, TABs, and any other special characters.
The syntax for triple quotes consists of three consecutive single or double quotes.

Raw strings do not treat the backlash as a special character at all. Every character you put into a raw string stays the way you wrote it.

Unicode String
All strings in python 3 are represented in Unicode whereas in python 2 are stored internally as 8-bit ASCII, hence it is required to attach 'u' to make it Unicode.

Built-in String Methods

capitalize() - Capitalizes first letter of string
center(width, fillchar) - Returns a string padded with fillchar with the original string centered to a total
of width columns.
count(str, beg= 0,end=len(string)) - Counts how many times str occurs in string or in a substring of string if starting
index beg and ending index end are given.
decode(encoding='UTF-8',errors='strict') - Decodes the string using the codec registered for encoding. encoding defaults
to the default string encoding.
encode(encoding='UTF-8',errors='strict') - Returns encoded string version of string; on error, default is to raise a
ValueError unless errors is given with 'ignore' or 'replace'.
endswith(suffix, beg=0, end=len(string)) - Determines if string or a substring of string (if starting index beg and ending
index end are given) ends with suffix; returns true if so and false otherwise.
expandtabs(tabsize=8) - Expands tabs in string to multiple spaces; defaults to 8 spaces per tab if tabsize
not provided.
find(str, beg=0 end=len(string)) - Determine if str occurs in string or in a substring of string if starting index beg
and ending index end are given returns index if found and -1 otherwise.
index(str, beg=0, end=len(string))
Same as find(), but raises an exception if str not found.
isalnum() - Returns true if string has at least 1 character and all characters are
alphanumeric and false otherwise.
isalpha() - Returns true if string has at least 1 character and all characters are alphabetic
and false otherwise.
isdigit() - Returns true if the string contains only digits and false otherwise.
islower() - Returns true if string has at least 1 cased character and all cased characters
are in lowercase and false otherwise.
isnumeric() - Returns true if a unicode string contains only numeric characters and false
otherwise.
isspace() - Returns true if string contains only whitespace characters and false otherwise.
istitle() - Returns true if string is properly "titlecased" and false otherwise.
isupper() - Returns true if string has at least one cased character and all cased characters
are in uppercase and false otherwise.
join(seq) - Merges (concatenates) the string representations of elements in sequence seq
into a string, with separator string.
len(string) - Returns the length of the string
ljust(width[, fillchar]) - Returns a space-padded string with the original string left-justified to a total
of width columns.
lower() - Converts all uppercase letters in string to lowercase.
lstrip() - Removes all leading whitespace in string.
maketrans() - Returns a translation table to be used in translate function.
max(str) - Returns the max alphabetical character from the string str.
min(str) - Returns the min alphabetical character from the string str.
replace(old, new [, max]) - Replaces all occurrences of old in string with new or at most max occurrences
if max given.
rfind(str, beg=0,end=len(string)) - Same as find(), but search backwards in string.
rindex( str, beg=0, end=len(string)) - Same as index(), but search backwards in string.
rjust(width,[, fillchar]) - Returns a space-padded string with the original string right-justified to a total
of width columns.
rstrip() - Removes all trailing whitespace of string.
split(str="", num=string.count(str)) - Splits string according to delimiter str (space if not provided) and returns list
of substrings; split into at most num substrings if given.
splitlines( num=string.count('\n')) - Splits string at all (or num) NEWLINEs and returns a list of each line with
NEWLINEs removed.
startswith(str, beg=0,end=len(string)) - Determines if string or a substring of string (if starting index beg and ending
index end are given) starts with substring str; returns true if so and false
otherwise.
strip([chars]) - Performs both lstrip() and rstrip() on string
swapcase() - Inverts case for all letters in string.
title() - Returns "titlecased" version of string, that is, all words begin with uppercase
and the rest are lowercase.
translate(table, deletechars="") - Translates string according to translation table str(256 chars), removing those
in the del string.
upper() - Converts lowercase letters in string to uppercase.
zfill (width) - Returns original string leftpadded with zeros to a total of width characters;
intended for numbers, zfill() retains any sign given (less one zero).
isdecimal() - Returns true if a unicode string contains only decimal characters and false
otherwise.

